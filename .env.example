############################################################
# global variables
############################################################
RESTART=on-failure
LOG_LEVEL=INFO
UID=1000
GID=1000

############################################################
# proxy (nginx)
#  Proxy comes first because we refer to variables here
#  from other variables below.
############################################################
NGINX_IMAGE_TAG=latest
# needs to be changed for stage and prod respectively
PROXY_URL=http://localhost:80
PROXY_TLS_CERT_PATH=/tmp/tsm/fullchain.pem
PROXY_TLS_KEY_PATH=/tmp/tsm/privkey.pem
PROXY_SITE_CONFIG_FILE=tsm.dev.conf
#PROXY_SITE_CONFIG_FILE=tsm.tls.conf
PROXY_PLAIN_PORT=127.0.0.1:80:80
PROXY_TLS_PORT=127.0.0.1:443:443
PROXY_MINIO_PORT=127.0.0.1:9000:9000

############################################################
# database (postgres, timescaledb-ha, postgis)
############################################################
DATABASE_IMAGE_TAG=pg14

POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_PORT=127.0.0.1:5432
POSTGRES_HEALTHCHECK_INTERVAL=10s
POSTGRES_EXTRA_PARAMS=
# POSTGRES_EXTRA_PARAMS=-c ssl=on -c ssl_cert_file=/var/lib/postgresql/server.crt -c ssl_key_file=/var/lib/postgresql/server.key
POSTGRES_TLS_CERT_PATH=/tmp/c8cf2d92-73cd-11ec-b035-54e1ad7c5c19
POSTGRES_TLS_KEY_PATH=/tmp/c8cf2d92-73cd-11ec-b035-54e1ad7c5c19

CREATEDB_POSTGRES_USER=postgres
CREATEDB_POSTGRES_PASSWORD=postgres
CREATEDB_POSTGRES_HOST=database
CREATEDB_POSTGRES_DATABASE=postgres

SMS_DB_USER=postgres
SMS_DB_PASSWORD=postgres
SMS_DB_PORT=5432
SMS_DB_DB=postgres
SMS_DB_HOST=database
SMS_URL=https://web-intern-stage.app.ufz.de/sms/
# can be either 'db' or 'api'
SMS_ACCESS_TYPE=db

CV_DB_HOST=database
CV_DB_DB=postgres
CV_DB_PORT=5432
CV_DB_USER=postgres
CV_DB_PASSWORD=postgres
CV_URL=https://sms-cv.helmholtz.cloud/sms/cv/
# can be either 'db' or 'api'
CV_ACCESS_TYPE=db

S3MAP_POSTGRES_HOST=database
S3MAP_POSTGRES_PORT=5432
S3MAP_POSTGRES_USER=s3map
S3MAP_POSTGRES_PASS=secret
S3MAP_POSTGRES_DB=postgres

############################################################
# mqtt-broker (mosquitto)
############################################################
MQTT_BROKER_IMAGE_TAG=latest
MOSQUITTO_PORT=127.0.0.1:1883
MOSQUITTO_PORT_SECURE=127.0.0.1:8883
MQTT_USER=mqtt
# Change this!
MQTT_PASSWORD=mqtt
MQTT_QOS=2
MQTT_CLEAN_SESSION=False
MQTT_BROKER_LOG_SIZE=100K
MQTT_BROKER_FILE_COUNT=10
MQTT_BROKER_HEALTHCHECK_INTERVAL=10s
MQTT_CAT_LOG_SIZE=100K
MQTT_CAT_FILE_COUNT=10
MQTT_INGEST_USER=mqtt_ingest
MQTT_INGEST_PASSWORD=neeTham4iexee5aiwoop8Eeroxeichahfo6zezai
MOSQUITTO_CONFIG=./mosquitto/mosquitto.conf
#Change this to ./mosquitto/mosquitto.tls.conf to enable TLS
MOSQUITTO_TLS_CONFIG=./mosquitto/
MOSQUITTO_TLS_CERT_PATH=/tmp/c8cf2d92-73cd-11ec-b035-54e1ad7c5c19
MOSQUITTO_TLS_KEY_PATH=/tmp/c8cf2d92-73cd-11ec-b035-54e1ad7c5c19
MOSQUITTO_TLS_CA_PATH=/tmp/c8cf2d92-73cd-11ec-b035-54e1ad7c5c19
MQTT_AUTH_POSTGRES_HOST=database
MQTT_AUTH_POSTGRES_PORT=5432
MQTT_AUTH_POSTGRES_USER=mqtt_auth
MQTT_AUTH_POSTGRES_PASS=secret
MQTT_AUTH_POSTGRES_DB=postgres
# Set to verify-full or at least require when running in production
#MQTT_AUTH_PG_TLSMODE=verify-full
MQTT_AUTH_PG_TLSMODE=disable

############################################################
# object-storage (minio)
############################################################
OBJECT_STORAGE_IMAGE_TAG=latest
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=minioadmin
MINIO_SERVER_URL=
# Set to true when running on production!
MINIO_SECURE=False
MINIO_HOST=object-storage:9000
MINIO_HEALTHCHECK_INTERVAL=2s
MINIO_BROWSER_REDIRECT_URL=${PROXY_URL}/object-storage/
MINIO_SFTP_HOSTKEY=./data/minio/certs/id_ed25519
MINIO_SFTP_PORT=127.0.0.1:40022
MINIO_FTP_TLS_CRT=./data/minio/certs/minio-ftp.crt
MINIO_FTP_TLS_KEY=./data/minio/certs/minio-ftp.key
MINIO_FTP_PORT=127.0.0.1:40021
MINIO_FTP_PASV_PORTS=127.0.0.1:30000-30010:30000-30010

############################################################
# visualization (grafana)
############################################################
GRAFANA_IMAGE_TAG=latest
GRAFANA_USER=grafana
GRAFANA_PASSWORD=grafana
GRAFANA_URL=http://visualization:3000
GRAFANA_DEFAULT_DATASOURCE_URL=database:5432
GRAFANA_DEFAULT_DATASOURCE_DATABASE=postgres
GRAFANA_DEFAULT_DATASOURCE_USER=${POSTGRES_USER}
GRAFANA_DEFAULT_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
# Grafana postgres client ssl mode: disable/require/verify-ca/verify-full
GRAFANA_DEFAULT_DATASOURCE_SSLMODE=disable
GRAFANA_SERVER_PROTOCOL=http
GF_AUTH_GENERIC_OAUTH_AUTH_URL=https://login-dev.helmholtz.de/oauth2-as/oauth2-authz
GF_AUTH_GENERIC_OAUTH_TOKEN_URL=https://login-dev.helmholtz.de/oauth2/token
GF_AUTH_GENERIC_OAUTH_API_URL=https://login-dev.helmholtz.de/oauth2/userinfo
GRAFANA_PROXY_URL=${PROXY_URL}/visualization/

############################################################
# frontend (python, django)
############################################################
FRONTEND_IMAGE_TAG=latest
FRONTEND_POSTGRES_HOST=database
FRONTEND_POSTGRES_DB=postgres
FRONTEND_POSTGRES_USER=frontenddb
# Change this when running in production!
FRONTEND_POSTGRES_PASS=frontenddb
FRONTEND_MQTT_HOST=mqtt-broker
FRONTEND_MQTT_USER=frontendbus
# Change this when running in production!
FRONTEND_MQTT_PASS=frontendbus
DJANGO_SUPERUSER_USERNAME=admin
# Change this, when exposing the app to a network!
DJANGO_SUPERUSER_PASSWORD=admin
DJANGO_SUPERUSER_EMAIL=example@example.com
# Change this, when exposing the app to a network!
DJANGO_SECRET_KEY=NlnjUaFieRyzPnGfYGvEsHCCfU0ilDv3VRsXcSmbJ85EXjBgx1xYjvzqt7B0q12Q
DJANGO_BASE_PATH=/frontend/
DJANGO_TRUSTED_ORIGINS=http://localhost:80,https://tsm.intranet.ufz.de
DJANGO_ALLOWED_HOSTS=.localhost,127.0.0.1,[::1]
# Change this to verify-full when using a remote database!
DJANGO_POSTGRES_SSLMODE=disable
DJANGO_DEBUG=0
DJANGO_HELMHOLTZ_CLIENT_ID=ufz-tsm
DJANGO_HELMHOLTZ_CLIENT_SECRET=00000000000000000000
DJANGO_HELMHOLTZ_AAI_CONF_URL=https://login-dev.helmholtz.de/oauth2/.well-known/openid-configuration
# VOS: Virtual Organisations
ALLOWED_VOS=UFZ-Timeseries-Management

############################################################
# frost (tomcat)
############################################################
TOMCAT_IMAGE_TAG=9


############################################################
# tsmdl (python, fastapi)
############################################################
TSM_DL_IMAGE_TAG=latest
UVICORN_ARGS=

############################################################
# mqtt-cat (mosquitto)
############################################################
MQTT_CAT_IMAGE_TAG=latest

############################################################
# monitoring (cAdvisor)
############################################################
MONITORING_IMAGE_TAG=v0.47.2
CADVISOR_PORT=127.0.0.1:8080

############################################################
# dispatcher (python)
#  Currently this section includes all worker services, but
#  soon we will change that.
############################################################
DISPATCHER_IMAGE_TAG=latest

SCHEDULER=BasicScheduler
SCHED_HOST=http://basic-demo-scheduler:5000

# use only on stage/production
#SCHEDULER=SlurmScheduler
#SCHED_HOST=https://head3.eve.ufz.de/slurmrest
SCHED_SLURM_RESTAPI_VERSION=v0.0.38
SCHED_MQTT_BROKER=tsm.intranet.ufz.de:8883
SCHED_MQTT_USER=$MQTT_USER
SCHED_MQTT_PASSWORD=$MQTT_PASSWORD
SCHED_JOB_LOG_LEVEL=DEBUG
SCHED_SLURM_USER=
SCHED_SLURM_JWT_TOKEN=

TOMCAT_PROXY_URL=${PROXY_URL}/sta/

############################################################
# basic-demo-scheduler (python, flask)
############################################################

############################################################
# basic-demo-scheduler (python, flask)
############################################################
SCHEDULER_IMAGE_TAG=latest
# This is used in the Dockerfile of basic-demo-scheduler
EXTRACTOR_IMAGE_TAG=latest

############################################################
# cron-scheduler (debian, python)
############################################################
CRON_DEBIAN_IMAGE_TAG=bullseye-slim
CRON_SETUP_SERVICE=true
CRON_CREATEDB_POSTGRES_USER=${CREATEDB_POSTGRES_USER}
CRON_CREATEDB_POSTGRES_PASSWORD=${CREATEDB_POSTGRES_PASSWORD}
CRON_CREATEDB_POSTGRES_HOST=${CREATEDB_POSTGRES_HOST}
CRON_CREATEDB_POSTGRES_DATABASE=${CREATEDB_POSTGRES_DATABASE}

CRON_SMS_ACCESS_TYPE=${SMS_ACCESS_TYPE}
CRON_SMS_API_URL=${SMS_URL}backend/api/v1/
CRON_SMS_API_TOKEN=00000000000000000000

CRON_CV_ACCESS_TYPE=${CV_ACCESS_TYPE}
CRON_CV_API_URL=${CV_URL}api/v1/

############################################################
# keycloak
############################################################
KEYCLOAK_PORT=8081