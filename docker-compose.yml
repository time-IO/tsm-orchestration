version: "2.4"
services:
  postgres:
    restart: on-failure
    image: postgres:12-alpine
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./data/postgres/data:/var/lib/postgresql/data
      - ./data/postgres/postgres-ddl.sql:/docker-entrypoint-initdb.d/postgres-ddl.sql
      - ./data/postgres/postgres-fixtures.sql:/docker-entrypoint-initdb.d/postgres-fixtures.sql
    user: "${UID}:${GID}"

  minio:
    image: minio/minio
    restart: on-failure
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "127.0.0.1:9000:9000"
      - "127.0.0.1:9001:9001"
    environment:
      MINIO_NOTIFY_KAFKA_ENABLE: "on"
      MINIO_NOTIFY_KAFKA_BROKERS: "kafka:9092"
      MINIO_NOTIFY_KAFKA_TOPIC: "minio-bucket-notifications"
    volumes:
      - ./data/minio/vol0:/vol0
      - ./data/minio/vol1:/vol1
      - ./data/minio/vol2:/vol2
      - ./data/minio/vol3:/vol3
    user: "${UID}:${GID}"
    command:
      - "server"
      - "/vol{0...3}"
      - "--console-address"
      - ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 2s
      timeout: 1s
      retries: 15

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.7
    restart: on-failure
    volumes:
      - ./data/zookeeper:/bitnami/zookeeper
    user: "${UID}:${GID}"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    healthcheck:
      test: [ "CMD", "zkServer.sh", "status" ]
      interval: 2s
      timeout: 1s
      retries: 15

  kafka:
    image: docker.io/bitnami/kafka:3
    hostname: kafka
    restart: on-failure
    ports:
      - "127.0.0.1:9092:9092"
    volumes:
      - ./data/kafka:/bitnami/kafka
    user: "${UID}:${GID}"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "127.0.0.1:9092", "--list"]
      interval: 5s
      timeout: 5s
      retries: 3

  dispatcher-producer:
    image: git.ufz.de:4567/rdm-software/timeseries-management/tsm-dispatcher/dispatcher:latest
    command:
      - --version

  dispatcher-minio-new-thing-runner:
    image: git.ufz.de:4567/rdm-software/timeseries-management/tsm-dispatcher/dispatcher:latest
    restart: on-failure
    depends_on:
      kafka:
        condition: service_healthy
      minio:
        condition: service_healthy
    command:
      - --topic
      - thing_created
      - --kafka-server
      - kafka:9092
      - run-create-thing-on-minio-action-service
      - --minio_secure
      - "False"
      - minio:9000
      - minioadmin
      - minioadmin

  dispatcher-create-new-thing-db-runner:
    image: git.ufz.de:4567/rdm-software/timeseries-management/tsm-dispatcher/dispatcher:latest
    restart: on-failure
    depends_on:
      kafka:
        condition: service_healthy
      minio:
        condition: service_healthy
    command:
      - --topic
      - thing_created
      - --kafka-server
      - kafka:9092
      - run-create-database-schema-action-service
      - postgresql://postgres:postgres@postgres/postgres

  dispatcher-run-process-new-file-service:
    image: git.ufz.de:4567/rdm-software/timeseries-management/tsm-dispatcher/dispatcher:latest
    restart: on-failure
    depends_on:
      kafka:
        condition: service_healthy
      minio:
        condition: service_healthy
    command:
      - --topic
      - minio-bucket-notifications
      - --kafka-server
      - kafka:9092
      - run-process-new-file-service
      - --minio_secure
      - "False"
      - minio:9000
      - minioadmin
      - minioadmin

  # for debugging kafka events
  kafkacat:
    image: confluentinc/cp-kafkacat
    command:
      - kafkacat
      - -b
      - kafka:9092
      - -C
      - -u
      - -G
      - 5867ab54
      - thing_created
      - minio-bucket-notifications
    depends_on:
      kafka:
        condition: service_healthy
      minio:
        condition: service_healthy

  extractor:
    image: git.ufz.de:4567/rdm-software/timeseries-management/tsm-basic-demo-scheduler/basic_demo_scheduler:latest
    restart: on-failure
