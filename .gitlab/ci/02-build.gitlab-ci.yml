---

build-and-push-images:
  stage: build
  image: "docker:${DOCKER_IMAGE_TAG}"
  needs: []
  before_script:
    # Prepare .env file to use the branch name as image tag
    # This .env file is used in subequent jobs that have a line of dependency back to this job.
    # if a tag is set $CI_COMMIT_REF_NAME equals $CI_COMMIT_TAG
    - cp .env.example .env
    - |
      echo "TIMEIO_INIT_IMAGE_TAG=$CI_COMMIT_REF_NAME" >> .env
      echo "TIMEIO_FROST_IMAGE_TAG=$CI_COMMIT_REF_NAME" >> .env
      echo "TIMEIO_CRON_SCHEDULER_IMAGE_TAG=$CI_COMMIT_REF_NAME" >> .env
      echo "TIMEIO_DISPATCHER_IMAGE_TAG=$CI_COMMIT_REF_NAME" >> .env
      echo "TIMEIO_CONFIGDB_UPDATER_IMAGE_TAG=$CI_COMMIT_REF_NAME" >> .env
    - export REGISTRY=$(grep TIMEIO_IMAGE_REGISTRY .env | cut -d'=' -f2)
    - echo $CI_REGISTRY_PASSWORD | docker login $REGISTRY -u $CI_REGISTRY_USER --password-stdin
  after_script:
    - docker logout
  script:
    - echo $BUILD_SERVICES
    - DOCKER_BUILDKIT=0 docker compose build --push --build-arg BUILD_DATE=${BUILD_DATE} --build-arg VCF_REF=${CI_COMMIT_SHA} $BUILD_SERVICES
  rules:
    # Always run if pipeline is triggered by a tag
    - if: "$CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED"
      when: always
    # Never run if pipeline is triggered by a merge_request_event or a push on main
    - if: "$CI_PIPELINE_SOURCE == 'merge_request_event' || $CI_COMMIT_BRANCH == 'main'"
      when: never
    # Always run if pipeline is triggered by a push on a branch
    - if: "$CI_PIPELINE_SOURCE == 'push'"
      when: always
  tags:
    - "dind"
  artifacts:
    paths:
      - .env