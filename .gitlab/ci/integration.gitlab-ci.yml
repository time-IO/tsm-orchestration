---
proxy-test:
  stage: "integration"
  image: "docker:20.10.16-dind"
  before_script:
    - "apk add --no-cache curl iproute2 postgresql jq"
    - "cp .env.example .env"
    - "docker compose pull -q"
    - "docker compose build -q"
    - "docker compose up -d -V"
    - "docker compose ps"
  script:
    - "docker network ls"
    - "docker volume ls"
    - "ip a"
    - "sleep 20"
    - "curl -I http://localhost:80 || echo nope"
    - "PGPASSWORD=postgres psql -U postgres -d postgres -h docker -p 5432 -tAc \"SELECT version()\" || echo nope"
    - "docker compose exec -T frontend python3 manage.py loaddata user.json"
    - "sleep 2"
    - "docker compose exec -T frontend python3 manage.py loaddata thing.json"
    - "sleep 2"
    - "docker compose exec -T frontend python3 manage.py dumpdata tsm.database --indent 2 > database.json"
    - "DB_USER=$(cat database.json | jq -r '.[].\"fields\".\"username\"')"
    - "DB_PASSWORD=$(cat database.json | jq -r '.[].\"fields\".\"password\"')"
    - "DB_NAME=$(cat database.json | jq -r '.[].\"fields\".\"name\"')"
    - "echo \"$DB_USER $DB_PASSWORD $DB_NAME\""
    - "docker compose logs worker-db-setup"
    - "docker compose logs mqtt-cat"
    - "sleep 5"
    - "PGPASSWORD=$DB_PASSWORD psql -U $DB_USER -d $DB_NAME -h docker -p 5432 -tAc \"select * from thing\" || echo nope"
    - "docker-compose exec -T frontend python3 manage.py dumpdata tsm.rawdatastorage > object-storage.json"
    - "export MINIO_USER=$(cat object-storage.json | jq -r '.[].\"fields\".\"access_key\"')"
    - "export MINIO_PASSWORD=$(cat object-storage.json | jq -r '.[].\"fields\".\"secret_key\"')"
    - "curl -u ${MINIO_USER}:${MINIO_PASSWORD} ftp://docker:40021 -I -s -o /dev/null && echo yes || echo nope"
    - "curl -I http://docker || echo nope"
 
  tags:
    - "dind"
