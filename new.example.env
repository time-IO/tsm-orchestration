# !!! This is a WIP file !!!

############################################################
# Note on this file's structure:
#
# Environment variables are described and possibly annotated with the following annotations:
#   @security                   Variable is security-relevant.
#   @service [SERVICE_NAME]     Variable is used in [SERVICE_NAME].
#   @choices [CHOICES]          Comma-separated list of posiblr values.
#
# Available service names:
#   PROXY,
#   MQTT_BROKER,
#   OBJECT_STORAGE,
#   DATABASE,
#   VISUALIZATION,
#   THING_MANAGEMENT_FRONTEND,
#   TOMCAT,
#   TSMDL,
#   DB_API,
#   FLYWAY,
#   CONFIGDB_UPDATER,
#   WORKER_X, TODO
#   TIMEIO_QAQC,
#   CRON
############################################################

############################################################
# Image tags
############################################################

# @service PROXY
NGINX_IMAGE_TAG=latest

# @service DATABASE
DATABASE_IMAGE_TAG=pg17

# @service MQTT_BROKER
MQTT_BROKER_IMAGE_TAG=latest

# @service OBJECT_STORAGE
OBJECT_STORAGE_IMAGE_TAG=latest

# @service VISUALIZATION
GRAFANA_IMAGE_TAG=latest

# @service THING_MANAGEMENT_FRONTEND
THING_MANAGEMENT_FRONTEND_IMAGE_TAG=latest

# @service TOMCAT
TOMCAT_IMAGE_TAG=9.0.98

# @service TSMDL
TSM_DL_IMAGE_TAG=latest

# @service DB_API
DB_API_IMAGE_TAG=latest

# @service FLYWAY
FLYWAY_IMAGE_TAG=10

# @service CONFIGDB_UPDATER
CONFIGDB_UPDATER_IMAGE_TAG=latest

# @service DISPATCHER
DISPATCHER_IMAGE_TAG=latest

# @service TIMEIO_QAQC
TIMEIO_QAQC_IMAGE_TAG=latest

# @service CRON
CRON_DEBIAN_IMAGE_TAG=bullseye-slim


############################################################
# GLOBAL VARIABLES
############################################################

# @choices: always, on-failure, unless-stopped, no
# The restart policy for containers/services.
# Note: See TODO for information on restart policies.
RESTART=on-failure

# @choices: DEBUG, INFO, WARNING, ERROR, CRITICAL
# Log level for services.
# Note: See TODO for information on Log levels.
LOG_LEVEL=INFO

# User ID for running containers.
# Note:
#   `1000` is for TODO
#   See TODO
UID=1000

# Group ID for running containers.
# Note:
#   `1000` is for TODO
#   See TODO
GID=1000

# @security
# Encryption key for secure communication between services.
FERNET_KEY=CKoB---DEFAULT-DUMMY-SECRET---0exKVH0QDLy1B=

############################################################
# Proxy (Nginx)
############################################################

# @service PROXY
# TODO description
PROXY_URL=http://localhost:80

# @service PROXY
# TODO description
PROXY_TLS_CERT_PATH=/tmp/tsm/fullchain.pem

# @service PROXY
# TODO description
PROXY_TLS_KEY_PATH=/tmp/tsm/privkey.pem

# @service PROXY
# TODO description
PROXY_PLAIN_PORT=80

# @service PROXY
# TODO description
PROXY_TLS_PORT=443

# @service PROXY
# TODO description
PROXY_MINIO_PORT=9000

############################################################
# Database (PostgreSQL)
############################################################

# @service DATABASE
# TODO description
POSTGRES_USER=postgres

# @security
# @service DATABASE
# TODO description
POSTGRES_PASSWORD=postgres

# @service DATABASE
# TODO description
POSTGRES_PORT=5432

# @service DATABASE
# Healtcheck interval for database service.
# Time between health checks during the start period.
# Defaults to 30s.
POSTGRES_HEALTHCHECK_INTERVAL=10s

# @service DATABASE
# TODO description
POSTGRES_EXTRA_PARAMS=

# @service DATABASE
# TODO description
POSTGRES_TLS_CERT_PATH=/tmp/c8cf2d92-73cd-11ec-b035-54e1ad7c5c

# @service DATABASE
# TODO description
POSTGRES_TLS_KEY_PATH=/tmp/c8cf2d92-73cd-11ec-b035-54e1ad7c5c1

############################################################
# MQTT Broker (Mosquitto)
############################################################

# @service MQTT_BROKER
# TODO description
MQTT_USER=mqtt

# @security
# @service MQTT_BROKER
# TODO description
MQTT_PASSWORD=mqtt

# @service MQTT_BROKER
# TODO: rename MOSQUITTO -> MQTT
MOSQUITTO_HOST=127.0.0.1

# @service MQTT_BROKER
# TODO description
MOSQUITTO_PORT=1883

# @service MQTT_BROKER
# TODO description
MOSQUITTO_PORT_SECURE=8883

# @service MQTT_BROKER
# TODO description
MOSQUITTO_URL=${MOSQUITTO_HOST}:${MOSQUITTO_PORT}

# @service MQTT_BROKER
# TODO description
MOSQUITTO_URL_SECURE=${MOSQUITTO_HOST}:${MOSQUITTO_PORTMOSQUITTO_PORT_SECURE}

# @service MQTT_BROKER
# @choices: 0, 1, 2
# Quality of Service (QoS) level for MQTT messages.
# Note: See TODO
#       0:
#       1:
#       2:
MQTT_QOS=2

# @service MQTT_BROKER
# @choices True, False
# Whether to use a clean session for MQTT connections.
MQTT_CLEAN_SESSION=False

# @service MQTT_BROKER
# The maximum size of the mqtt-broker service log before it's rolled.
# A positive integer plus a modifier representing the unit of measure (k, m, or g).
# Defaults to 20m.
MQTT_BROKER_LOG_SIZE=100K

# @service MQTT_BROKER
# The maximum number of log files for the mqtt-broker service that can be present.
# If rolling the logs creates excess files, the oldest file is removed.
# A positive integer. Defaults to 5.
MQTT_BROKER_FILE_COUNT=10

# @service MQTT_BROKER
# Healtcheck interval for mqtt-broker service.
# Time between health checks during the start period.
# Defaults to 30s.
MQTT_BROKER_HEALTHCHECK_INTERVAL=10s

# @service MQTT_BROKER
# The maximum size of the mqtt-cat service log before it's rolled.
# A positive integer plus a modifier representing the unit of measure (k, m, or g).
# Defaults to 20m.
MQTT_CAT_LOG_SIZE=100K

# @service MQTT_BROKER
# The maximum number of log files for the mqtt-cat service that can be present.
# If rolling the logs creates excess files, the oldest file is removed.
# A positive integ
# TODO: rename MOSQUITTO -> MQTTer. Defaults to 5.
MQTT_CAT_FILE_COUNT=10

# @service MQTT_BROKER
# TODO description
MQTT_INGEST_USER=mqtt_ingest

# @security
# @service MQTT_BROKER
# TODO description
MQTT_INGEST_PASSWORD=neeTham4iexee5aiwoop8Eeroxeichahfo6zezai

# @service MQTT_BROKER
# TODO description
MOSQUITTO_CONFIG=./mosquitto/mosquitto.conf

# @service MQTT_BROKER
# Note: Change this to ./mosquitto/mosquitto.tls.conf to enable TLS
MOSQUITTO_TLS_CONFIG=./mosquitto/

# @service MQTT_BROKER
# TODO description
MOSQUITTO_TLS_CERT_PATH=/tmp/c8cf2d92-73cd-11ec-b035-54e1ad7c5c19

# @service MQTT_BROKER
# TODO description
MOSQUITTO_TLS_KEY_PATH=/tmp/c8cf2d92-73cd-11ec-b035-54e1ad7c5c19

# @service MQTT_BROKER
# TODO description
MOSQUITTO_TLS_CA_PATH=/tmp/c8cf2d92-73cd-11ec-b035-54e1ad7c5c19

# @service MQTT_BROKER
# TODO description
MQTT_AUTH_POSTGRES_HOST=database

# @service MQTT_BROKER
# TODO description
MQTT_AUTH_POSTGRES_PORT=5432

# @service MQTT_BROKER
# TODO description
MQTT_AUTH_POSTGRES_USER=mqtt_auth

# @security
# @service MQTT_BROKER
# TODO description
MQTT_AUTH_POSTGRES_PASS=secret

# @service MQTT_BROKER
# TODO description
MQTT_AUTH_POSTGRES_DB=postgres

# @service MOSQUITTO
# @choices disable, require, verify-full
# TLS-mode of DBConnections
# Note: Set to verify-full or at least require when running in production
MQTT_AUTH_PG_TLSMODE=disable

############################################################
# Object Storage (Minio)
############################################################

# TODO: rename MINIO -> OBJECT_STORAGE
# TODO description
MINIO_DIR=./data/minio

# @service OBJECT_STORAGE
# TODO description
MINIO_ROOT_USER=minioadmin

# @security
# @service OBJECT_STORAGE
# TODO description
SEC_MINIO_ROOT_PASSWORD=minioadmin

# @service OBJECT_STORAGE
# TODO description
MINIO_SERVER_URL=

# @service OBJECT_STORAGE
# @choices True, False
# Whether to enable secure mode (TLS) for Minio
# Note: Set to true when running in production!
MINIO_SECURE=False

# @service OBJECT_STORAGE
# TODO description
MINIO_HOST=object-storage:9000

# @service OBJECT_STORAGE
# Healtcheck interval for object-storage service.
# Time between health checks during the start period.
# Defaults to 30s.
MINIO_HEALTHCHECK_INTERVAL=2s

# @service OBJECT_STORAGE
# TODO description
MINIO_BROWSER_REDIRECT_URL=${PROXY_URL}/object-storage/

# @security
# @service OBJECT_STORAGE
# TODO description
MINIO_SFTP_HOSTKEY=./data/minio/certs/id_ed25519

# @service OBJECT_STORAGE
# TODO description
MINIO_SFTP_HOST=127.0.0.1

# @service OBJECT_STORAGE
# TODO description
MINIO_SFTP_PORT=40022

# @service OBJECT_STORAGE
# TODO description
MINIO_SFTP_ADDRESS=${MINIO_SFTP_HOST}:${MINIO_SFTP_PORT}

# @service OBJECT_STORAGE
# TODO description
MINIO_FTP_TLS_CRT=./data/minio/certs/minio-ftp.crt

# @service OBJECT_STORAGE
# TODO description
MINIO_FTP_TLS_KEY=./data/minio/certs/minio-ftp.key

# @service OBJECT_STORAGE
# TODO description
MINIO_FTP_HOST=127.0.0.1

# @service OBJECT_STORAGE
# TODO description
MINIO_FTP_PORT=40022

# @service OBJECT_STORAGE
# TODO description
MINIO_FTP_ADDRESS=${MINIO_FTP_HOST}:${MINIO_FTP_PORT}

# @service OBJECT_STORAGE
# TODO description
MINIO_FTP_PASV_PORTS=30000-30010:30000-30010

# @service OBJECT_STORAGE
# TODO description
MINIO_FTP_PASV=${MINIO_FTP_HOST}:${MINIO_FTP_PASV_PORTS}

############################################################
# Visualization (Grafana)
############################################################

# @service VISUALIZATION
# TODO description
GRAFANA_USER=grafana

# @security
# @service VISUALIZATION
# TODO description
GRAFANA_PASSWORD=grafana

# @service VISUALIZATION
# TODO description
GRAFANA_URL=http://visualization:3000

# @service VISUALIZATION
# TODO description
GRAFANA_DEFAULT_DATASOURCE_URL=database:5432

# @service VISUALIZATION
# TODO description
GRAFANA_DEFAULT_DATASOURCE_DATABASE=postgres

# @service VISUALIZATION
# TODO description
GRAFANA_DEFAULT_DATASOURCE_USER=${POSTGRES_USER}

# @service VISUALIZATION
# TODO description
GRAFANA_DEFAULT_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}

# @service VISUALIZATION
# TODO description
# Grafana postgres client ssl mode: disable/require/verify-ca/verify-full
GRAFANA_DEFAULT_DATASOURCE_SSLMODE=disable

# @service VISUALIZATION
# TODO description
GRAFANA_SERVER_PROTOCOL=http

# @service VISUALIZATION
# TODO description
GF_AUTH_GENERIC_OAUTH_AUTH_URL=https://login-dev.helmholtz.de/oauth2-as/oauth2-authz

# @service VISUALIZATION
# TODO description
GF_AUTH_GENERIC_OAUTH_TOKEN_URL=https://login-dev.helmholtz.de/oauth2/token

# @service VISUALIZATION
# TODO description
GF_AUTH_GENERIC_OAUTH_API_URL=https://login-dev.helmholtz.de/oauth2/userinfo

# @service VISUALIZATION
# TODO description
GRAFANA_PROXY_URL=${PROXY_URL}/visualization/

############################################################
# Frontend (Django)
############################################################

# @service THING_MANAGEMENT_FRONTEND
# TODO description
DJANGO_SUPERUSER_USERNAME=admin

# @security
# @service THING_MANAGEMENT_FRONTEND
# TODO description
SEC_DJANGO_SUPERUSER_PASSWORD=admin

# @service THING_MANAGEMENT_FRONTEND
# @syntax BOOLEAN
# Debug mode for Django (set to False in production)
DJANGO_DEBUG=0

# @service THING_MANAGEMENT_FRONTEND
# TODO description
FRONTEND_POSTGRES_HOST=database

# @service THING_MANAGEMENT_FRONTEND
# TODO description
FRONTEND_POSTGRES_DB=postgres

# @service THING_MANAGEMENT_FRONTEND
# TODO description
FRONTEND_POSTGRES_USER=frontenddb

# @security
# @service THING_MANAGEMENT_FRONTEND
# TODO description
FRONTEND_POSTGRES_PASS=frontenddb

# @service THING_MANAGEMENT_FRONTEND
# TODO description
FRONTEND_MQTT_HOST=mqtt-broker

# @service THING_MANAGEMENT_FRONTEND
# TODO description
FRONTEND_MQTT_USER=frontendbus

# @security
# @service THING_MANAGEMENT_FRONTEND
# TODO description
FRONTEND_MQTT_PASS=frontendbus

# @service THING_MANAGEMENT_FRONTEND
# TODO description
DJANGO_SUPERUSER_EMAIL=example@example.com

# @security
# @service THING_MANAGEMENT_FRONTEND
# Note: Change this, when exposing the app to a network!
DJANGO_SECRET_KEY=NlnjUaFieRyzPnGfYGvEsHCCfU0ilDv3VRsXcSmbJ85EXjBgx1xYjvzqt7B0q12Q

# @service THING_MANAGEMENT_FRONTEND
# TODO description
DJANGO_BASE_PATH=/frontend/

# @service THING_MANAGEMENT_FRONTEND
# TODO description
DJANGO_TRUSTED_ORIGINS=http://localhost:80,https://tsm.intranet.ufz.de

# @service THING_MANAGEMENT_FRONTEND
# TODO description
DJANGO_ALLOWED_HOSTS=.localhost,127.0.0.1,[::1]

# @service THING_MANAGEMENT_FRONTEND
# @choices disable, require, verify-full
# Note: Change this to verify-full when using a remote database!
DJANGO_POSTGRES_SSLMODE=disable

# @service THING_MANAGEMENT_FRONTEND
# TODO description
DJANGO_HELMHOLTZ_CLIENT_ID=ufz-tsm

# @security
# @service THING_MANAGEMENT_FRONTEND
# TODO description
DJANGO_HELMHOLTZ_CLIENT_SECRET=00000000000000000000

# @service THING_MANAGEMENT_FRONTEND
# TODO description
DJANGO_HELMHOLTZ_AAI_CONF_URL=https://login-dev.helmholtz.de/oauth2/.well-known/openid-configuration

# @service THING_MANAGEMENT_FRONTEND
# TODO description
# VOs: Virtual Organisations
ALLOWED_VOS=UFZ-Timeseries-Management

# @service THING_MANAGEMENT_FRONTEND
# The STA endpoint queried for Qa/Qc-Settings
STA_ROOT_URL=${TOMCAT_PROXY_URL}

# @service THING_MANAGEMENT_FRONTENDSTA_ROOT_URL
# The SaQC version for Qa/Qc-Settings
QAQC_SETTING_SAQC_VERSION=v2.6.0

############################################################
# Flyway
############################################################

# @service FLYWAY
# TODO description
FLYWAY_BASELINE_VERSION=0.0.1

# @service FLYWAY
# TODO description
SMS_DB_USER=postgres

# @security
# @service FLYWAY
# TODO description
SMS_DB_PASSWORD=postgres

# @service FLYWAY
# TODO description
SMS_DB_PORT=5432

# @service FLYWAY
# TODO description
SMS_DB_DB=postgres

# @service FLYWAY
# TODO description
SMS_DB_HOST=database

# @service FLYWAY
# TODO description
SMS_URL=https://web-intern-stage.app.ufz.de/sms/

# @service FLYWAY
# @service CRON
# @choices db, api
# TODO description
SMS_ACCESS_TYPE=db

# @service FLYWAY
# TODO description
CV_DB_HOST=database

# @service FLYWAY
# TODO description
CV_DB_DB=postgres

# @service FLYWAY
# TODO description
CV_DB_PORT=5432

# @service FLYWAY
# TODO description
CV_DB_USER=postgres

# @service FLYWAY
# TODO description
CV_DB_PASSWORD=postgres

# @service FLYWAY
# @dependant CRON_CV_API_URL
# TODO description
CV_URL=https://sms-cv.helmholtz.cloud/sms/cv/

# @service FLYWAY
# @dependant CRON_CV_ACCESS_TYPE
# @choices db, api
# TODO description
CV_ACCESS_TYPE=db

############################################################
# TSM Decoupling Layer (TSMDL)
############################################################

# @service TSMDL
# @choices local, staging, production
# The environment in which the TSMDL is running.
# Note:
#   local:      does not require authentication
#   staging:    authenticates against Helmholtz AAI Dev Login
#   production: authenticates against Helmholtz AAI
TSM_DL_ENVIRONMENT=local

# @service TSMDL
# Arguments to run the TSMDL/FastAPI service with
# See TODO
UVICORN_ARGS=

# @service TSMDL
# TODO description
DB_API_BASE_URL=http://timeio-db-api:8001

############################################################
# DISPATCHER
############################################################

# TODO service
# TODO description
CREATEDB_POSTGRES_USER=postgres

# @security
# TODO service
# TODO description
CREATEDB_POSTGRES_PASSWORD=postgres

# TODO service
# TODO description
CREATEDB_POSTGRES_HOST=database

# TODO service
# TODO description
CREATEDB_POSTGRES_DATABASE=postgres

# TODO service
# @dependant STA_ROOT_URL
# TODO description
TOMCAT_PROXY_URL=${PROXY_URL}/sta/

# TODO service
# @choices true, false
# TODO description
JOURNALING=true

############################################################
# DATABASES
############################################################

# TODO service
# @dependant CONFIGDB_DSN
# TODO description
CONFIGDB_USER=configdb

# @security
# TODO service
# @dependant CONFIGDB_DSN
# TODO description
CONFIGDB_PASSWORD=configdb

# TODO service
# @dependant CONFIGDB_DSN
# TODO description
CONFIGDB_HOST=database

# TODO service
# @dependant CONFIGDB_DSN
# TODO description
CONFIGDB_DB=postgres

# TODO service
# @dependant CONFIGDB_DSN
# TODO description
CONFIGDB_PORT=5432

# @security
# TODO service
# Connection for read-only-accessing the ConfigDB
CONFIGDB_DSN="postgresql://\${CONFIGDB_USER}:\${CONFIGDB_PASSWORD}@\${CONFIGDB_HOST}:\${CONFIGDB_PORT}/\${CONFIGDB_DB}"

############################################################
# monitoring (cAdvisor)
############################################################

# @service MONITORING
# @dependant CADVISOR_URL
# TODO description
# TODO rename CADVISOR -> MONITORING
CADVISOR_HOST=127.0.0.1:8080

# @service MONITORING
# @dependant CADVISOR_URL
# TODO description
CADVISOR_PORT=127.0.0.1:8080

# @service MONITORING
# TODO description
CADVISOR_URL=${CADVISOR_HOST}:${CADVISOR_PORT}


############################################################
# cron-scheduler (debian, python)
############################################################

# @service CRON
# TODO description
CRON_SETUP_SERVICE=true

# @service CRON
# TODO description
CRON_CREATEDB_POSTGRES_USER=${CREATEDB_POSTGRES_USER}

# @service CRON
# TODO description
CRON_CREATEDB_POSTGRES_PASSWORD=${CREATEDB_POSTGRES_PASSWORD}

# @service CRON
# TODO description
CRON_CREATEDB_POSTGRES_HOST=${CREATEDB_POSTGRES_HOST}

# @service CRON
# TODO description
CRON_CREATEDB_POSTGRES_DATABASE=${CREATEDB_POSTGRES_DATABASE}

# @service CRON
# TODO description
CRON_SMS_ACCESS_TYPE=${SMS_ACCESS_TYPE}

# @service CRON
# TODO description
CRON_SMS_API_URL=${SMS_URL}backend/api/v1/

# @security
# @service CRON
# TODO description
CRON_SMS_API_TOKEN=00000000000000000000

# @service CRON
# TODO description
CRON_CV_ACCESS_TYPE=${CV_ACCESS_TYPE}

# @service CRON
# TODO description
CRON_CV_API_URL=${CV_URL}api/v1/


############################################################
# Miscellaneous
############################################################

# TODO service
# MQTT topic for parsed data
TOPIC_DATA_PARSED=data_parsed