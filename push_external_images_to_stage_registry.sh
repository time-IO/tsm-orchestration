

# source the dotenv
. .env 2>/dev/null

PREFIX=registry.hzdr.de/ufz-tsm/tsm-orchestration/stage

docker image tag $FLYWAY_IMAGE_REGISTRY:$FLYWAY_IMAGE_TAG $PREFIX/flyway:$FLYWAY_IMAGE_TAG
docker image tag $PROXY_NGINX_IMAGE_REGISTRY:$PROXY_NGINX_IMAGE_TAG $PREFIX/nginx:$PROXY_NGINX_IMAGE_TAG
docker image tag $DATABASE_POSTGRES_IMAGE_REGISTRY:$DATABASE_POSTGRES_IMAGE_TAG $PREFIX/postgres:$DATABASE_POSTGRES_IMAGE_TAG
docker image tag $MQTT_BROKER_MOSQUITTO_IMAGE_REGISTRY:$MQTT_BROKER_MOSQUITTO_IMAGE_TAG $PREFIX/mosquitto-broker:$MQTT_BROKER_MOSQUITTO_IMAGE_TAG
docker image tag $MQTT_CAT_MOSQUITTO_IMAGE_REGISTRY:$MQTT_CAT_MOSQUITTO_IMAGE_TAG $PREFIX/mosquitto-cat:$MQTT_CAT_MOSQUITTO_IMAGE_TAG
docker image tag $OBJECT_STORAGE_MINIO_IMAGE_REGISTRY:$OBJECT_STORAGE_MINIO_IMAGE_TAG $PREFIX/minio:$OBJECT_STORAGE_MINIO_IMAGE_TAG
docker image tag $VISUALIZATION_GRAFANA_IMAGE_REGISTRY:$VISUALIZATION_GRAFANA_IMAGE_TAG $PREFIX/grafana:$VISUALIZATION_GRAFANA_IMAGE_TAG
docker image tag $MONITORING_CADVISOR_IMAGE_REGISTRY:$MONITORING_CADVISOR_IMAGE_TAG $PREFIX/cadvisor:$MONITORING_CADVISOR_IMAGE_TAG


FLYWAY_IMAGE_REGISTRY=$PREFIX/flyway
PROXY_NGINX_IMAGE_REGISTRY=$PREFIX/nginx
DATABASE_POSTGRES_IMAGE_REGISTRY=$PREFIX/postgres
MQTT_BROKER_MOSQUITTO_IMAGE_REGISTRY=$PREFIX/mosquitto-broker
MQTT_CAT_MOSQUITTO_IMAGE_REGISTRY=$PREFIX/mosquitto-cat
OBJECT_STORAGE_MINIO_IMAGE_REGISTRY=$PREFIX/minio
VISUALIZATION_GRAFANA_IMAGE_REGISTRY=$PREFIX/grafana
MONITORING_CADVISOR_IMAGE_REGISTRY=$PREFIX/cadvisor


docker image push $FLYWAY_IMAGE_REGISTRY:$FLYWAY_IMAGE_TAG
docker image push $PROXY_NGINX_IMAGE_REGISTRY:$PROXY_NGINX_IMAGE_TAG
docker image push $DATABASE_POSTGRES_IMAGE_REGISTRY:$DATABASE_POSTGRES_IMAGE_TAG
docker image push $MQTT_BROKER_MOSQUITTO_IMAGE_REGISTRY:$MQTT_BROKER_MOSQUITTO_IMAGE_TAG
docker image push $MQTT_CAT_MOSQUITTO_IMAGE_REGISTRY:$MQTT_CAT_MOSQUITTO_IMAGE_TAG
docker image push $OBJECT_STORAGE_MINIO_IMAGE_REGISTRY:$OBJECT_STORAGE_MINIO_IMAGE_TAG
docker image push $VISUALIZATION_GRAFANA_IMAGE_REGISTRY:$VISUALIZATION_GRAFANA_IMAGE_TAG
docker image push $MONITORING_CADVISOR_IMAGE_REGISTRY:$MONITORING_CADVISOR_IMAGE_TAG

echo
echo "==============================================================="
echo FLYWAY_IMAGE_REGISTRY=$PREFIX/flyway
echo PROXY_NGINX_IMAGE_REGISTRY=$PREFIX/nginx
echo DATABASE_POSTGRES_IMAGE_REGISTRY=$PREFIX/postgres
echo MQTT_BROKER_MOSQUITTO_IMAGE_REGISTRY=$PREFIX/mosquitto-broker
echo MQTT_CAT_MOSQUITTO_IMAGE_REGISTRY=$PREFIX/mosquitto-cat
echo OBJECT_STORAGE_MINIO_IMAGE_REGISTRY=$PREFIX/minio
echo VISUALIZATION_GRAFANA_IMAGE_REGISTRY=$PREFIX/grafana
echo MONITORING_CADVISOR_IMAGE_REGISTRY=$PREFIX/cadvisor
echo FLYWAY_IMAGE_TAG=$FLYWAY_IMAGE_TAG
echo PROXY_NGINX_IMAGE_TAG=$PROXY_NGINX_IMAGE_TAG
echo DATABASE_POSTGRES_IMAGE_TAG=$DATABASE_POSTGRES_IMAGE_TAG
echo MQTT_BROKER_MOSQUITTO_IMAGE_TAG=$MQTT_BROKER_MOSQUITTO_IMAGE_TAG
echo MQTT_CAT_MOSQUITTO_IMAGE_TAG=$MQTT_CAT_MOSQUITTO_IMAGE_TAG
echo OBJECT_STORAGE_MINIO_IMAGE_TAG=$OBJECT_STORAGE_MINIO_IMAGE_TAG
echo VISUALIZATION_GRAFANA_IMAGE_TAG=$VISUALIZATION_GRAFANA_IMAGE_TAG
echo MONITORING_CADVISOR_IMAGE_TAG=$MONITORING_CADVISOR_IMAGE_TAG
echo "==============================================================="
echo
echo !! ON THE STAGE SYSTEM !!
echo Put the environment variables above in an extra dotenv FILE and
echo pass it to docker compose commands with the --env-file FILE flag. Bear
echo in min you can NOT use other tags for the images than the one provided
echo below, because they most probably does not exist !
